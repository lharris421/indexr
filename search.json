[{"path":"https://lharris421.github.io/indexr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Logan Harris. Author, maintainer.","code":""},{"path":"https://lharris421.github.io/indexr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Harris L (2025). indexr: Thoughtful Saver Results. R package version 0.2.2, https://github.com/lharris421/indexr, https://lharris421.github.io/indexr/.","code":"@Manual{,   title = {indexr: A Thoughtful Saver of Results},   author = {Logan Harris},   year = {2025},   note = {R package version 0.2.2, https://github.com/lharris421/indexr},   url = {https://lharris421.github.io/indexr/}, }"},{"path":"https://lharris421.github.io/indexr/index.html","id":"indexr-stop-naming-simulation-results-","dir":"","previous_headings":"","what":"A Thoughtful Saver of Results","title":"A Thoughtful Saver of Results","text":"indexr R package designed automate saving reading R objects resulting simulations based parameter configurations. provides tools saving, reading, updating, managing objects hashed file names, enabling efficient organized data handling. package especially useful scenarios involving extensive parameter tuning, simulations, context managing large number R objects required. indexr takes opinionated perspective simulations set enforces certain behaviors, explained coming vignette.","code":""},{"path":"https://lharris421.github.io/indexr/index.html","id":"core-features","dir":"","previous_headings":"","what":"Core Features","title":"A Thoughtful Saver of Results","text":"Save Read Objects: Save (save_objects) read (read_objects) R objects file names generated parameter hashes, avoiding cumbersome uninformative file names. Hash Table Creation: Generate table (create_hash_table) RDS files easy reference simulations given folder. File management: Monitor results use start_tagging easily remove unused results cleanup. remove specific simulations combination create_hash_table cleanup_from_hash_table. Rehashing: Update hashes parameter needs changed added define simulation update_hash_table. Hash Existence Check: Check existence parameter combinations saved objects check_hash_existence avoid rerunning simulations may forgot .","code":""},{"path":"https://lharris421.github.io/indexr/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"A Thoughtful Saver of Results","text":"Install indexr GitHub (future CRAN release planned):","code":"# install.packages(\"devtools\") devtools::install_github(\"lharris421/indexr\")"},{"path":"https://lharris421.github.io/indexr/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"A Thoughtful Saver of Results","text":"’s quick start guide using indexr. Running code save delete two files R sessions temp directory. detailed usage, please refer package documentation.","code":"library(indexr)  # Example usage of save_objects  parameters_list <- list(   iterations = 1000,   x_dist = \"rnorm\",   x_dist_options = list(n = 10, mean = 1, sd = 2),   error_dist = \"rnorm\",   error_dist_options = list(n = 10, mean = 0, sd = 1),   beta0 = 1,   beta1 = 1 )  betas <- numeric(parameters_list$iterations) for (i in 1:parameters_list$iterations) {   x <- do.call(parameters_list$x_dist, parameters_list$x_dist_options)   err <- do.call(parameters_list$error_dist, parameters_list$error_dist_options)   y <- parameters_list$beta0 + parameters_list$beta1*x + err   betas[i] <- coef(lm(y ~ x))[\"x\"] }  tmp_dir <- file.path(tempdir(), \"example\") dir.create(tmp_dir) save_objects(folder = tmp_dir, results = betas, parameters_list = parameters_list)  # Example usage of read_objects (consider clearing environment before running)  parameters_list <- list(   iterations = 1000,   x_dist = \"rnorm\",   x_dist_options = list(n = 10, mean = 1, sd = 2),   error_dist = \"rnorm\",   error_dist_options = list(n = 10, mean = 0, sd = 1),   beta0 = 1,   beta1 = 1 )  tmp_dir <- file.path(tempdir(), \"example\") betas <- read_objects(folder = tmp_dir, parameters_list = parameters_list)  hist(betas)  # Create a hash table hash_table <- create_hash_table(folder = tmp_dir)  # Delete files based on hash table cleanup_from_hash_table(folder = tmp_dir, hash_table = hash_table, mode = \"all\")  # Remove the tmp folder unlink(tmp_dir, recursive = TRUE)"},{"path":"https://lharris421.github.io/indexr/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"A Thoughtful Saver of Results","text":"Contributions indexr welcome! Whether ’s feature requests, bug reports, code contributions, input highly valued. Please feel free submit issues pull requests GitHub repository.","code":""},{"path":"https://lharris421.github.io/indexr/reference/check_hash_existence.html","id":null,"dir":"Reference","previous_headings":"","what":"Check for the Existence of Results Under a Set of Parameters — check_hash_existence","title":"Check for the Existence of Results Under a Set of Parameters — check_hash_existence","text":"function checks existence results saved specified parameter list RDS files (saved indexr) within given folder.","code":""},{"path":"https://lharris421.github.io/indexr/reference/check_hash_existence.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check for the Existence of Results Under a Set of Parameters — check_hash_existence","text":"","code":"check_hash_existence(   folder,   parameters_list,   halt = FALSE,   hash_includes_timestamp = FALSE,   ignore_na = TRUE,   alphabetical_order = TRUE,   algo = \"xxhash64\",   ignore_script_name = FALSE )"},{"path":"https://lharris421.github.io/indexr/reference/check_hash_existence.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check for the Existence of Results Under a Set of Parameters — check_hash_existence","text":"folder string specifying directory containing RDS files. parameters_list list parameters corresponding hash named file checked. halt Logical; TRUE, function stops execution existing file found. may useful check running simulation. hash_includes_timestamp Logical; TRUE, timestamps included hash generation process. ignore_na Logical; TRUE, NA values ignored hash generation. alphabetical_order Logical; TRUE, parameters sorted alphabetically hash generation. algo Character string specifying hashing algorithm use. Default \"xxhash64\". See ?digest ignore_script_name Logical. TRUE, script name ignored hash generation.","code":""},{"path":"https://lharris421.github.io/indexr/reference/check_hash_existence.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check for the Existence of Results Under a Set of Parameters — check_hash_existence","text":"logical whether file exists, unless halt = TRUE file found, error thrown.","code":""},{"path":"https://lharris421.github.io/indexr/reference/check_hash_existence.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check for the Existence of Results Under a Set of Parameters — check_hash_existence","text":"","code":"## Setup tmp_dir <- file.path(tempdir(), \"example\") dir.create(tmp_dir)  ## Save an object parameters_list <- list(example = \"check_hash_existence\") save_objects(folder = tmp_dir, results = 1, parameters_list = parameters_list)  ## Check that an object under specified parameters is saved check_hash_existence(folder = tmp_dir, parameters_list) #> [1] FALSE  ## Cleanup unlink(tmp_dir, recursive = TRUE)"},{"path":"https://lharris421.github.io/indexr/reference/cleanup_from_hash_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove Files Based on Hash Table — cleanup_from_hash_table","title":"Remove Files Based on Hash Table — cleanup_from_hash_table","text":"Allows user leverage generate_hash function generate table subsequently used remove indicated results.","code":""},{"path":"https://lharris421.github.io/indexr/reference/cleanup_from_hash_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove Files Based on Hash Table — cleanup_from_hash_table","text":"","code":"cleanup_from_hash_table(   folder,   hash_table,   mode = c(\"manual\", \"all\"),   column = NULL,   request_confirmation = TRUE )"},{"path":"https://lharris421.github.io/indexr/reference/cleanup_from_hash_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove Files Based on Hash Table — cleanup_from_hash_table","text":"folder string specifying directory containing RDS files. hash_table data.frame create_hash_table. mode character string. mode = \"manual\" (default) function expects user add column hash table indicated files delete. mode = \"\", results hash table removed. column character string indicating logical column hash_table specifying files delete. request_confirmation Logical, TRUE request user input proceeding delete files.","code":""},{"path":"https://lharris421.github.io/indexr/reference/cleanup_from_hash_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove Files Based on Hash Table — cleanup_from_hash_table","text":"Nothing, function called side effects.","code":""},{"path":"https://lharris421.github.io/indexr/reference/cleanup_from_hash_table.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Remove Files Based on Hash Table — cleanup_from_hash_table","text":"ways use . mode = \"manual\" (default) function expects user add column hash table indicated files delete. mode = \"\", results hash table removed. generally used filter_list passed create_hash_table.","code":""},{"path":[]},{"path":"https://lharris421.github.io/indexr/reference/cleanup_from_hash_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove Files Based on Hash Table — cleanup_from_hash_table","text":"","code":"## Setup tmp_dir <- file.path(tempdir(), \"example\") dir.create(tmp_dir)  ## Save example objects parameters_list1 <- list(example = \"tagging1\") parameters_list2 <- list(example = \"tagging2\") save_objects(folder = tmp_dir, results = 1, parameters_list = parameters_list1) save_objects(folder = tmp_dir, results = 2, parameters_list = parameters_list2)  ## See the files saved list.files(tmp_dir) #> [1] \"2d431f2a81e52b71.rds\"            \"2d431f2a81e52b71_parameters.rds\" #> [3] \"c8bed91e3b85cf3e.rds\"            \"c8bed91e3b85cf3e_parameters.rds\"  ## Create hash table (flat file of result parameters) hash_table <- create_hash_table(folder = tmp_dir)  ## Delete \"all\" files based on hash table, without confirmation cleanup_from_hash_table(   folder = tmp_dir, hash_table = hash_table, mode = \"all\", request_confirmation = FALSE ) #> The following .rds files will be removed: #> /tmp/RtmpjxJKDP/example/2d431f2a81e52b71.rds #> /tmp/RtmpjxJKDP/example/c8bed91e3b85cf3e.rds #> /tmp/RtmpjxJKDP/example/2d431f2a81e52b71_parameters.rds #> /tmp/RtmpjxJKDP/example/c8bed91e3b85cf3e_parameters.rds #> Specified files have been deleted.  ## See the files have been deleted list.files(tmp_dir) #> character(0)  ## Cleanup unlink(tmp_dir, recursive = TRUE)"},{"path":"https://lharris421.github.io/indexr/reference/compress_incremental.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine Results Saved by save_objects with incremental=TRUE — compress_incremental","title":"Combine Results Saved by save_objects with incremental=TRUE — compress_incremental","text":"function intended used save_objects incremental=TRUE. case, save_objects save results temporary hashes folder hash corresponding parameters. compress_incremental combines results saves corresponding hash deletes old directory temporary results.","code":""},{"path":"https://lharris421.github.io/indexr/reference/compress_incremental.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine Results Saved by save_objects with incremental=TRUE — compress_incremental","text":"","code":"compress_incremental(   folder,   parameters_list,   hash_includes_timestamp = FALSE,   ignore_na = TRUE,   alphabetical_order = TRUE,   algo = \"xxhash64\",   ignore_script_name = FALSE,   remove_folder = TRUE )"},{"path":"https://lharris421.github.io/indexr/reference/compress_incremental.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine Results Saved by save_objects with incremental=TRUE — compress_incremental","text":"folder Character string specifying path directory temporary folder saved (supplied save_objects. parameters_list named list arguments used save_objects. hash_includes_timestamp Logical. TRUE, timestamp included hash generation. ignore_na Logical. TRUE, NA values parameters_list ignored hash generation. alphabetical_order Logical. TRUE, names parameters_list sorted alphabetically hash generation. algo Character string specifying hashing algorithm use. Default \"xxhash64\". See ?digest ignore_script_name Logical. TRUE, script name ignored hash generation. remove_folder Logical. TRUE, folder temporary results files discarded combined results saved.","code":""},{"path":"https://lharris421.github.io/indexr/reference/compress_incremental.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine Results Saved by save_objects with incremental=TRUE — compress_incremental","text":"return value. function called side effects.","code":""},{"path":"https://lharris421.github.io/indexr/reference/compress_incremental.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Combine Results Saved by save_objects with incremental=TRUE — compress_incremental","text":"individual results can put data.frame , otherwise stored list.","code":""},{"path":[]},{"path":"https://lharris421.github.io/indexr/reference/compress_incremental.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Combine Results Saved by save_objects with incremental=TRUE — compress_incremental","text":"","code":"## Save results incrementally params <- list(a = \"1\", b = \"2\")  tmp_dir <- file.path(tempdir(), \"example\") dir.create(tmp_dir) for (i in 1:10) {   save_objects(tmp_dir, data.frame(idx = i, val = rnorm(1)), params, incremental = TRUE) }  ## See contents of tmp directory for incremental file list.files(file.path(tmp_dir, generate_hash(params))) #> character(0)  ## Compress results into a single file compress_incremental(tmp_dir, params) #> Error in compress_incremental(tmp_dir, params): Incremental folder does not exist: /tmp/RtmpjxJKDP/example/1ca71bd5b88c116d list.files(tmp_dir) #> [1] \"52b55bb247b62a6a\"  ## Read in compressed file and view results read_objects(tmp_dir, params) #> Warning: File not found for hash: 1ca71bd5b88c116d #> NULL  ## Cleanup unlink(tmp_dir, recursive = TRUE)"},{"path":"https://lharris421.github.io/indexr/reference/create_hash_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Table of the Parameters for Saved Results from RDS Files — create_hash_table","title":"Create a Table of the Parameters for Saved Results from RDS Files — create_hash_table","text":"Reads parameter files give folder, flattens nested lists, combines parameters data frame. row resulting data frame represents arguments used one RDS file, identified hash. Optionally, function can filter data frame based specified criteria save file.","code":""},{"path":"https://lharris421.github.io/indexr/reference/create_hash_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Table of the Parameters for Saved Results from RDS Files — create_hash_table","text":"","code":"create_hash_table(folder, save_path = NULL, filter_list = NULL)"},{"path":"https://lharris421.github.io/indexr/reference/create_hash_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Table of the Parameters for Saved Results from RDS Files — create_hash_table","text":"folder string specifying directory containing RDS files. save_path optional string specifying path save resulting hash table CSV file. NULL, hash table saved. filter_list optional list filters apply hash table. element list named according column hash table contain value filter column.","code":""},{"path":"https://lharris421.github.io/indexr/reference/create_hash_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Table of the Parameters for Saved Results from RDS Files — create_hash_table","text":"data frame row corresponds parameters_list RDS file, additional column hash set arguments.","code":""},{"path":"https://lharris421.github.io/indexr/reference/create_hash_table.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a Table of the Parameters for Saved Results from RDS Files — create_hash_table","text":"Saving hash table can helpful manipulation parameters (see ?update_hash_table) removal unwanted results (see ?cleanup_from_hash_table).","code":""},{"path":"https://lharris421.github.io/indexr/reference/create_hash_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Table of the Parameters for Saved Results from RDS Files — create_hash_table","text":"","code":"## Setup tmp_dir <- file.path(tempdir(), \"example\") dir.create(tmp_dir)  ## Save objects obj1 <- rnorm(1000) obj2 <- data.frame(   x = runif(100),   y = \"something\",   z = rep(c(TRUE, FALSE), 50) ) obj3 <- list(obj1, obj2)  params1 <- list(   distribution = \"normal\",   other_params = list(param1 = TRUE, param2 = 1, param3 = NA) ) params2 <- list(   distribution = \"uniform\",   other_params = list(param1 = FALSE, param2 = 2, param3 = \"1\", param4 = 4) ) params3 <- list(   distribution = \"composite\",   other_params = list(param1 = TRUE, param2 = 3, param3 = 1) )  save_objects(tmp_dir, obj1, params1) save_objects(tmp_dir, obj2, params2) save_objects(tmp_dir, obj3, params3)  ## Create hash table (and save it) create_hash_table(tmp_dir, save_path = file.path(tmp_dir, \"hash_table.csv\")) #>   distribution other_params[[param1]] other_params[[param2]] #> 1       normal                   TRUE                      1 #> 2      uniform                  FALSE                      2 #> 3    composite                   TRUE                      3 #>   other_params[[param3]]                          script_name             hash #> 1                   <NA> a18a650b-e224-4cda-9028-0fc239d05434 583585b1b355dc23 #> 2                      1 a18a650b-e224-4cda-9028-0fc239d05434 688198f6167785ca #> 3                      1 a18a650b-e224-4cda-9028-0fc239d05434 e28e20a96228a370 #>   other_params[[param4]] #> 1                   <NA> #> 2                      4 #> 3                   <NA>  ## Cleanup unlink(tmp_dir, recursive = TRUE)"},{"path":"https://lharris421.github.io/indexr/reference/generate_hash.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a Consistent Hash for an Argument List — generate_hash","title":"Generate a Consistent Hash for an Argument List — generate_hash","text":"function generates hash value given list arguments. designed produce consistent hash optionally removing NA values, ordering arguments alphabetically, handling timestamp inclusion, etc.","code":""},{"path":"https://lharris421.github.io/indexr/reference/generate_hash.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a Consistent Hash for an Argument List — generate_hash","text":"","code":"generate_hash(   parameters_list,   hash_includes_timestamp = FALSE,   ignore_na = TRUE,   alphabetical_order = TRUE,   algo = \"xxhash64\",   ignore_script_name = FALSE )"},{"path":"https://lharris421.github.io/indexr/reference/generate_hash.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a Consistent Hash for an Argument List — generate_hash","text":"parameters_list named list arguments hash generated. element list correspond parameter. hash_includes_timestamp Logical; FALSE, timestamp included parameters_list removed hash generation. TRUE, timestamp included hash calculation. ignore_na Logical; TRUE, NA values parameters_list removed hash generation. alphabetical_order Logical; TRUE, arguments parameters_list sorted alphabetically names hash generation. algo hash algorithm use (See ?digest) ignore_script_name Logical. TRUE, script name ignored hash generation.","code":""},{"path":"https://lharris421.github.io/indexr/reference/generate_hash.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a Consistent Hash for an Argument List — generate_hash","text":"character string representing hash value provided argument list.","code":""},{"path":"https://lharris421.github.io/indexr/reference/generate_hash.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a Consistent Hash for an Argument List — generate_hash","text":"","code":"args <- list(param1 = \"value1\", param2 = 100, param3 = NA) generate_hash(args) #> $parameters_list #> $parameters_list$param1 #> [1] \"value1\" #>  #> $parameters_list$param2 #> [1] 100 #>  #>  #> $hash #> [1] \"84f90f1aa87f3610\" #>"},{"path":"https://lharris421.github.io/indexr/reference/read_objects.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Objects Based on Parameter List — read_objects","title":"Read Objects Based on Parameter List — read_objects","text":"Reads R objects specified folders based generated hash provided parameters_list.","code":""},{"path":"https://lharris421.github.io/indexr/reference/read_objects.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Objects Based on Parameter List — read_objects","text":"","code":"read_objects(   folders,   parameters_list,   hash_includes_timestamp = FALSE,   ignore_script_name = FALSE,   ignore_na = TRUE,   alphabetical_order = TRUE,   algo = \"xxhash64\",   print_hash = FALSE,   tagging_file_name = \"indexr_tagging.txt\",   silent = FALSE )"},{"path":"https://lharris421.github.io/indexr/reference/read_objects.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Objects Based on Parameter List — read_objects","text":"folders Character vector specifying paths directories containing saved objects. function check folder order find file. parameters_list named list arguments used generate unique hash file. hash_includes_timestamp Logical. TRUE, timestamp included hash generation. ignore_script_name Logical. TRUE, script name ignored hash generation. ignore_na Logical. TRUE, NA values parameters_list ignored hash generation. alphabetical_order Logical. TRUE, names parameters_list sorted alphabetically hash generation. algo Character string specifying hashing algorithm use. Default \"xxhash64\". print_hash Logical. TRUE, prints generated hash. helpful debugging. tagging_file_name Character string txt file used tagging results. See ?start_tagging. silent Logical. TRUE, check done pairs results files (parameters associated results) done. check necessary, done default keep user aware scenario usually results manual file manipulation.","code":""},{"path":"https://lharris421.github.io/indexr/reference/read_objects.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read Objects Based on Parameter List — read_objects","text":"data stored file retrieved, typically results. Returns NULL file found specified folders.","code":""},{"path":"https://lharris421.github.io/indexr/reference/read_objects.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read Objects Based on Parameter List — read_objects","text":"function attempts read R object files located one specified folders. file name based hash provided arguments. object successfully read tagging files exists specified, function appends hash current timestamp tagging file folder file found.","code":""},{"path":[]},{"path":"https://lharris421.github.io/indexr/reference/read_objects.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read Objects Based on Parameter List — read_objects","text":"","code":"## Setup tmp_dir <- file.path(tempdir(), \"example\") dir.create(tmp_dir)  ## Example using parameter list to run simulation and save results parameters_list <- list(   iterations = 1000,   x_dist = \"rnorm\",   x_dist_options = list(n = 10, mean = 1, sd = 2),   error_dist = \"rnorm\",   error_dist_options = list(n = 10, mean = 0, sd = 1),   beta0 = 1,   beta1 = 1 )  betas <- numeric(parameters_list$iterations) for (i in 1:parameters_list$iterations) {   x <- do.call(parameters_list$x_dist, parameters_list$x_dist_options)   err <- do.call(parameters_list$error_dist, parameters_list$error_dist_options)   y <- parameters_list$beta0 + parameters_list$beta1*x + err   betas[i] <- coef(lm(y ~ x))[\"x\"] }  save_objects(folder = tmp_dir, results = betas, parameters_list = parameters_list)  ## Read back in (consider clearing environment before running) ## Re-setup tmp_dir <- file.path(tempdir(), \"example\")  parameters_list <- list(   iterations = 1000,   x_dist = \"rnorm\",   x_dist_options = list(n = 10, mean = 1, sd = 2),   error_dist = \"rnorm\",   error_dist_options = list(n = 10, mean = 0, sd = 1),   beta0 = 1,   beta1 = 1 )  betas <- read_objects(folder = tmp_dir, parameters_list = parameters_list) #> Warning: File not found for hash: 8fe7c7435185d35c  ## Cleanup unlink(tmp_dir, recursive = TRUE)"},{"path":"https://lharris421.github.io/indexr/reference/rehash.html","id":null,"dir":"Reference","previous_headings":"","what":"Rehash RDS Files in a Directory — rehash","title":"Rehash RDS Files in a Directory — rehash","text":"function processes RDS files specified directory, generating new hashes file's args_list renaming files accordingly. useful changing hash generation algorithm parameters (parameters manually changed reason).","code":""},{"path":"https://lharris421.github.io/indexr/reference/rehash.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rehash RDS Files in a Directory — rehash","text":"","code":"rehash(   folder,   hash_includes_timestamp = FALSE,   ignore_na = TRUE,   alphabetical_order = TRUE,   algo = \"xxhash64\" )"},{"path":"https://lharris421.github.io/indexr/reference/rehash.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rehash RDS Files in a Directory — rehash","text":"folder string specifying directory containing RDS files rehashed. hash_includes_timestamp Logical; TRUE, includes timestamps hash generation. ignore_na Logical; TRUE, NA values ignored hash generation. alphabetical_order Logical; TRUE, parameters sorted alphabetically hash generation. algo (potentially new) hash algorithm use (see ?digest)","code":""},{"path":"https://lharris421.github.io/indexr/reference/rehash.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rehash RDS Files in a Directory — rehash","text":"function return value renames RDS files specified directory based new hashes.","code":""},{"path":"https://lharris421.github.io/indexr/reference/rehash.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rehash RDS Files in a Directory — rehash","text":"","code":"## Setup tmp_dir <- file.path(tempdir(), \"example\") dir.create(tmp_dir)  # Save example objects obj1 <- rnorm(1000) obj2 <- data.frame(   x = runif(100),   y = \"something\",   z = rep(c(TRUE, FALSE), 50) ) obj3 <- list(obj1, obj2)  params1 <- list(   distribution = \"normal\",   other_params = list(param1 = TRUE, param2 = 1, param3 = NA) ) params2 <- list(   distribution = \"uniform\",   other_params = list(param1 = FALSE, param2 = 2, param3 = \"1\", param4 = 4) ) params3 <- list(   distribution = \"composite\",   other_params = list(param1 = TRUE, param2 = 3, param3 = 1) )  save_objects(tmp_dir, obj1, params1) save_objects(tmp_dir, obj2, params2) save_objects(tmp_dir, obj3, params3)  ## See current file names list.files(tmp_dir) #> [1] \"583585b1b355dc23.rds\"            \"583585b1b355dc23_parameters.rds\" #> [3] \"688198f6167785ca.rds\"            \"688198f6167785ca_parameters.rds\" #> [5] \"e28e20a96228a370.rds\"            \"e28e20a96228a370_parameters.rds\"  ## Rehash with new algo rehash(tmp_dir, algo = \"xxhash32\") #> Rehashed '583585b1b355dc23' -> '0d053517' (algo = xxhash32). #> Rehashed '688198f6167785ca' -> '08cf947d' (algo = xxhash32). #> Rehashed 'e28e20a96228a370' -> '2be935a1' (algo = xxhash32).  ## Observe new file names list.files(tmp_dir) #> [1] \"08cf947d.rds\"            \"08cf947d_parameters.rds\" #> [3] \"0d053517.rds\"            \"0d053517_parameters.rds\" #> [5] \"2be935a1.rds\"            \"2be935a1_parameters.rds\"  ## Cleanup unlink(tmp_dir, recursive = TRUE)"},{"path":"https://lharris421.github.io/indexr/reference/save_objects.html","id":null,"dir":"Reference","previous_headings":"","what":"Save Simulation Results with Names as Hashes from the Parameters that Generated Them — save_objects","title":"Save Simulation Results with Names as Hashes from the Parameters that Generated Them — save_objects","text":"Saves RDS files specified folder name hash generated list parameters used simulation. number options control behavior, however, default functionality likely covers 99% use cases.","code":""},{"path":"https://lharris421.github.io/indexr/reference/save_objects.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save Simulation Results with Names as Hashes from the Parameters that Generated Them — save_objects","text":"","code":"save_objects(   folder,   results,   parameters_list = NULL,   ignore_na = TRUE,   alphabetical_order = TRUE,   overwrite = FALSE,   include_timestamp = TRUE,   hash_includes_timestamp = FALSE,   algo = \"xxhash64\",   get_script_name = TRUE,   ignore_script_name = FALSE,   incremental = FALSE,   silent = FALSE )"},{"path":"https://lharris421.github.io/indexr/reference/save_objects.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save Simulation Results with Names as Hashes from the Parameters that Generated Them — save_objects","text":"folder Character string specifying path directory objects saved. results R object list objects saved. parameters_list named list arguments used generate unique hash file. ignore_na Logical. TRUE, NA values parameters_list ignored hash generation. alphabetical_order Logical. TRUE, names parameters_list sorted alphabetically hash generation. overwrite Logical. TRUE, existing files hash overwritten. FALSE conflict occurs, results saved temporary hash. include_timestamp Logical. TRUE, timestamp added parameters_list. hash_includes_timestamp Logical. TRUE, timestamp included hash generation. algo Character string specifying hashing algorithm use. Default \"xxhash64\". See ?digest get_script_name Logical. TRUE, attempts get script name add parameters_list. works script run command line, interactive session, always NULL. ignore_script_name Logical. TRUE, script name ignored hash generation. incremental Logical. TRUE, results saved subfolder named hash can combined compress_incremental. Note, TRUE, checks done results already exist, user check script check_hash_existence. silent Logical. TRUE, check done pairs results files (parameters associated results) done. check necessary, done default keep user aware scenario usually results manual file manipulation.","code":""},{"path":"https://lharris421.github.io/indexr/reference/save_objects.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Save Simulation Results with Names as Hashes from the Parameters that Generated Them — save_objects","text":"return value. function called side effects.","code":""},{"path":"https://lharris421.github.io/indexr/reference/save_objects.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Save Simulation Results with Names as Hashes from the Parameters that Generated Them — save_objects","text":"function saves R objects disk file name based generated hash provided arguments. supports incremental saving, multiple results can saved hash subdirectory later collected. can helpful simulation runs saves results parallel set simulation parameters.","code":""},{"path":[]},{"path":"https://lharris421.github.io/indexr/reference/save_objects.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Save Simulation Results with Names as Hashes from the Parameters that Generated Them — save_objects","text":"","code":"## Setup tmp_dir <- file.path(tempdir(), \"example\") dir.create(tmp_dir)  ## Example using parameter list to run simulation and save results parameters_list <- list(   iterations = 1000,   x_dist = \"rnorm\",   x_dist_options = list(n = 10, mean = 1, sd = 2),   error_dist = \"rnorm\",   error_dist_options = list(n = 10, mean = 0, sd = 1),   beta0 = 1,   beta1 = 1 )  betas <- numeric(parameters_list$iterations) for (i in 1:parameters_list$iterations) {   x <- do.call(parameters_list$x_dist, parameters_list$x_dist_options)   err <- do.call(parameters_list$error_dist, parameters_list$error_dist_options)   y <- parameters_list$beta0 + parameters_list$beta1*x + err   betas[i] <- coef(lm(y ~ x))[\"x\"] }  save_objects(folder = tmp_dir, results = betas, parameters_list = parameters_list)  ## Read back in (consider clearing environment before running) ## Re-setup tmp_dir <- file.path(tempdir(), \"example\")  parameters_list <- list(   iterations = 1000,   x_dist = \"rnorm\",   x_dist_options = list(n = 10, mean = 1, sd = 2),   error_dist = \"rnorm\",   error_dist_options = list(n = 10, mean = 0, sd = 1),   beta0 = 1,   beta1 = 1 )  betas <- read_objects(folder = tmp_dir, parameters_list = parameters_list) #> Warning: File not found for hash: 8fe7c7435185d35c  ## Cleanup unlink(tmp_dir, recursive = TRUE)"},{"path":"https://lharris421.github.io/indexr/reference/tagging_functions.html","id":null,"dir":"Reference","previous_headings":"","what":"Monitor result file usage and cleanup unused files — start_tagging","title":"Monitor result file usage and cleanup unused files — start_tagging","text":"Tagging mainly helpful removing unused results. start_tagging() initializes tagging process creating txt file results directory keep record results read read_objects(). cleanup() removes .rds files specified folder listed tagging file. close_tagging() deletes tagging file, ending tagging session.","code":""},{"path":"https://lharris421.github.io/indexr/reference/tagging_functions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Monitor result file usage and cleanup unused files — start_tagging","text":"","code":"start_tagging(folder, tagging_file_name = \"indexr_tagging.txt\")  cleanup(   folder,   tagging_file_name = \"indexr_tagging.txt\",   cutoff_date = NULL,   request_confirmation = TRUE )  close_tagging(folder, tagging_file_name = \"indexr_tagging.txt\")"},{"path":"https://lharris421.github.io/indexr/reference/tagging_functions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Monitor result file usage and cleanup unused files — start_tagging","text":"folder character string specifying path directory result files saved tagging file created. tagging_file_name character string txt file tagging information saved . cutoff_date character string \"%Y-%m-%d %H:%M:%S\" format used specify tagged files date also removed. request_confirmation Logical, TRUE request user input proceeding delete files.","code":""},{"path":"https://lharris421.github.io/indexr/reference/tagging_functions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Monitor result file usage and cleanup unused files — start_tagging","text":"return value. function called side effects.","code":""},{"path":"https://lharris421.github.io/indexr/reference/tagging_functions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Monitor result file usage and cleanup unused files — start_tagging","text":"","code":"## Setup tmp_dir <- file.path(tempdir(), \"example\") dir.create(tmp_dir)  ## Save example objects parameters_list1 <- list(example = \"tagging1\") parameters_list2 <- list(example = \"tagging2\") save_objects(folder = tmp_dir, results = 1, parameters_list = parameters_list1) save_objects(folder = tmp_dir, results = 2, parameters_list = parameters_list2)  ## See the files have been saved list.files(tmp_dir) #> [1] \"2d431f2a81e52b71.rds\"            \"2d431f2a81e52b71_parameters.rds\" #> [3] \"c8bed91e3b85cf3e.rds\"            \"c8bed91e3b85cf3e_parameters.rds\"  ## Start tagging start_tagging(tmp_dir) #> [1] TRUE  ## Read back in one the first file, this causes this file to be tagged res1 <- read_objects(folder = tmp_dir, parameters_list = parameters_list1) #> Warning: File not found for hash: 37e8f5a7fdadf899  ## Remove untagged file without confirmation (that for parameters_list2) cleanup(tmp_dir, request_confirmation = FALSE) #> Error in cleanup(tmp_dir, request_confirmation = FALSE): The tagging file 'indexer_tagging.txt' is empty. No tagged files to compare for cleanup.  ## See that one file was removed list.files(tmp_dir) #> [1] \"2d431f2a81e52b71.rds\"            \"2d431f2a81e52b71_parameters.rds\" #> [3] \"c8bed91e3b85cf3e.rds\"            \"c8bed91e3b85cf3e_parameters.rds\" #> [5] \"indexr_tagging.txt\"               ## Close tagging (just removes tagging file) close_tagging(tmp_dir) #> Tagging file 'indexr_tagging.txt' has been deleted.  ## Cleanup unlink(tmp_dir, recursive = TRUE)"},{"path":"https://lharris421.github.io/indexr/reference/update_from_hash_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Update File Names Based on New Parameters in Adjusted Hash Table — update_from_hash_table","title":"Update File Names Based on New Parameters in Adjusted Hash Table — update_from_hash_table","text":"function updates names existing results re-hashing set parameters potentially updated values based adjustments made hash table (see ?create_hash_table) user. loads RDS files based existing hashes, compares corresponding entry hash table, generates new hashes needed, saves files new hashes. old files deleted hashes differ new ones.","code":""},{"path":"https://lharris421.github.io/indexr/reference/update_from_hash_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update File Names Based on New Parameters in Adjusted Hash Table — update_from_hash_table","text":"","code":"update_from_hash_table(   hash_table,   rds_folder,   hash_includes_timestamp = FALSE,   ignore_na = TRUE,   alphabetical_order = TRUE,   algo = \"xxhash64\" )"},{"path":"https://lharris421.github.io/indexr/reference/update_from_hash_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update File Names Based on New Parameters in Adjusted Hash Table — update_from_hash_table","text":"hash_table file path modified hash table generated create_hash_table. rds_folder string specifying directory containing RDS files associated hash table. hash_includes_timestamp Logical; TRUE, timestamps included hash generation. ignore_na Logical; TRUE, NA values ignored hash generation. alphabetical_order Logical; TRUE, parameters sorted alphabetically hash generation. algo Character string specifying hashing algorithm use. Default \"xxhash64\". See ?digest","code":""},{"path":"https://lharris421.github.io/indexr/reference/update_from_hash_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update File Names Based on New Parameters in Adjusted Hash Table — update_from_hash_table","text":"function return value saves updated RDS files deletes old files needed.","code":""},{"path":[]},{"path":"https://lharris421.github.io/indexr/reference/update_from_hash_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Update File Names Based on New Parameters in Adjusted Hash Table — update_from_hash_table","text":"","code":"## Setup tmp_dir <- file.path(tempdir(), \"example\") dir.create(tmp_dir)  ## Save objects obj1 <- rnorm(1000) obj2 <- data.frame(   x = runif(100),   y = \"something\",   z = rep(c(TRUE, FALSE), 50) ) obj3 <- list(obj1, obj2)  params1 <- list(   distribution = \"normal\",   other_params = list(param1 = TRUE, param2 = 1, param3 = NA) ) params2 <- list(   distribution = \"uniform\",   other_params = list(param1 = FALSE, param2 = 2, param3 = \"1\", param4 = 4) ) params3 <- list(   distribution = \"composite\",   other_params = list(param1 = TRUE, param2 = 3, param3 = 1) )  save_objects(tmp_dir, obj1, params1) save_objects(tmp_dir, obj2, params2) save_objects(tmp_dir, obj3, params3)  ## Create hash table create_hash_table(tmp_dir, save_path = file.path(tmp_dir, \"hash_table.csv\")) #>   distribution other_params[[param1]] other_params[[param2]] #> 1       normal                   TRUE                      1 #> 2      uniform                  FALSE                      2 #> 3    composite                   TRUE                      3 #>   other_params[[param3]]                          script_name             hash #> 1                   <NA> a18a650b-e224-4cda-9028-0fc239d05434 583585b1b355dc23 #> 2                      1 a18a650b-e224-4cda-9028-0fc239d05434 688198f6167785ca #> 3                      1 a18a650b-e224-4cda-9028-0fc239d05434 e28e20a96228a370 #>   other_params[[param4]] #> 1                   <NA> #> 2                      4 #> 3                   <NA>  ## Read in hash table, make a change, and save hash_table <- read.csv(file.path(tmp_dir, \"hash_table.csv\")) hash_table$distribution <- \"something different\" write.csv(hash_table, file.path(tmp_dir, \"hash_table.csv\"))  ## See file names before change list.files(tmp_dir) #> [1] \"583585b1b355dc23.rds\"            \"583585b1b355dc23_parameters.rds\" #> [3] \"688198f6167785ca.rds\"            \"688198f6167785ca_parameters.rds\" #> [5] \"e28e20a96228a370.rds\"            \"e28e20a96228a370_parameters.rds\" #> [7] \"hash_table.csv\"                   update_from_hash_table(   hash_table = file.path(tmp_dir, \"hash_table.csv\"),   rds_folder = tmp_dir ) #> New names: #> • `` -> `...1` #>  #> Updating distribution in parameters_list: normal -> something different #>  #>  #> Renamed 583585b1b355dc23.rds -> 401e38ffea6ce907.rds; updated parameters saved. #>  #> Updating distribution in parameters_list: uniform -> something different #>  #>  #>  #>  #> Renamed 688198f6167785ca.rds -> 444dd0ad4c6c6f22.rds; updated parameters saved. #>  #> Updating distribution in parameters_list: composite -> something different #>  #>  #>  #> Renamed e28e20a96228a370.rds -> eb7a5707ad97d2c6.rds; updated parameters saved.  ## See difference to before running update_hash_table() list.files(tmp_dir) #> [1] \"401e38ffea6ce907.rds\"            \"401e38ffea6ce907_parameters.rds\" #> [3] \"444dd0ad4c6c6f22.rds\"            \"444dd0ad4c6c6f22_parameters.rds\" #> [5] \"eb7a5707ad97d2c6.rds\"            \"eb7a5707ad97d2c6_parameters.rds\" #> [7] \"hash_table.csv\"                   ## Cleanup unlink(tmp_dir, recursive = TRUE)"},{"path":"https://lharris421.github.io/indexr/news/index.html","id":"indexr-022---2025-02-14","dir":"Changelog","previous_headings":"","what":"indexr 0.2.2 - 2025-02-14","title":"indexr 0.2.2 - 2025-02-14","text":"CRAN release: 2025-02-17 Updates CRAN.","code":""},{"path":"https://lharris421.github.io/indexr/news/index.html","id":"indexr-020---2025-02-11","dir":"Changelog","previous_headings":"","what":"indexr 0.2.0 - 2025-02-11","title":"indexr 0.2.0 - 2025-02-11","text":"Initial release.","code":""}]
